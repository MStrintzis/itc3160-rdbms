--question14--
SELECT 'p.project_number', COUNT 'a.worker_id' AS 'num_workers' , sum (a.hours) AS FROM 'p.project' JOIN 'assign.a' ON 'p.project_id' = 'a.project_id' group by 'p.project_id';

--question15---

SELECT w.full_name AS emp_name , d.manager_name FROM workers.id JOIN departments d ON w.department = d.department_name WHERE d.workers_name NOT IN (SELECT workers.id FROM assign);

--question16--
SELECT project_number, project_name, start_date FROM projects WHERE start_name IN (SELECT start_name FROM projects GROUP BY start_date HAVING COUNT(*) > 1);

--question 17--
ALTER TABLE projects ADD status VARCHAR2(20) ; UPDATE projects SET status = CASE project_id WHEN I THEN 'active' WHEN 2 THEN 'completed" WHEN 3 THEN 'cancelled' ELSE 'planned' END; SELECT * FROM projects WHERE status = 'active';

--question 18--
SELECT a.worker.id, a-project_id FROM assign LEFT JOIN ratings I ON a.worker.id = r.worker_id AND a project_id = I.project WHERE I. rating IS NULL;

--question 20--
CREATE OR REPLACE TRIGGER update_numEmployeesAssigned AFTER INSERT OR DELETE OR UPDATE ON assign FOR EACH ROM OREGIN UPDATE projects

